backend:
  containerPort: 3000
  env:
    DB_HOST: mysql
    NODE_ENV: production
  image:
    pullPolicy: IfNotPresent
    repository: backend
    tag: latest
  livenessProbe: {}
  readinessProbe: {}
  replicaCount: 3
  resources:
    limits:
      cpu: '1'
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
frontend:
  containerPort: 3000
  env:
    NEXT_PUBLIC_API_URL: http://backend.prod.svc.cluster.local:3000
  image:
    pullPolicy: IfNotPresent
    repository: frontend
    tag: latest
  livenessProbe: {}
  readinessProbe: {}
  replicaCount: 3
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 128Mi
ingress:
  annotations: {}
  className: nginx
  enabled: true
  hosts:
  - host: microplatform.local
    paths:
    - backend: backend
      path: /api/
      pathType: Prefix
      port: 3000
    - backend: frontend
      path: /
      pathType: Prefix
      port: 80
mysql:
  containerPort: 3306
  env:
    MYSQL_DATABASE:
      configMapKeyRef:
        key: mysql-database
        name: mysql-config
    MYSQL_PASSWORD:
      secretKeyRef:
        key: mysql-password
        name: mysql-secret
    MYSQL_ROOT_PASSWORD:
      secretKeyRef:
        key: mysql-root-password
        name: mysql-secret
    MYSQL_USER:
      secretKeyRef:
        key: mysql-user
        name: mysql-secret
  image:
    pullPolicy: IfNotPresent
    repository: mysql
    tag: '8.0'
  livenessProbe: {}
  readinessProbe: {}
  replicaCount: 1
  resources:
    limits:
      cpu: '1'
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  volumeMounts:
  - mountPath: /var/lib/mysql
    name: mysql-storage
  volumes:
  - name: mysql-storage
    persistentVolumeClaim:
      claimName: mysql-pvc
namespace: prod
